<ProxyEndpoint name='default'>
  <Description>Default Proxy</Description>
  <HTTPProxyConnection>
    <BasePath>/sql1</BasePath>
    <Properties/>
    <!-- <VirtualHost>default</VirtualHost> -->
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>

  <FaultRules/>
  <!--
  <FaultRule name='ruleName'>
    <Step>
      <Name>{policy_name}</Name>
    </Step>
    <Condition>{(conditional statement)}</Condition>
  </FaultRule>
  -->

  <PreFlow name='PreFlow'>
      <Request/>
      <Response/>
  </PreFlow>
  <PostFlow name='PostFlow'>
      <Request/>
      <Response>
        <Step><Name>AM-CleanResponseHeaders</Name></Step>
      </Response>
  </PostFlow>

  <Flows>
    <!-- whitelist several Verb + path requests -->
    <Flow name='tables'>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/tables") and (request.verb = "GET")</Condition>
    </Flow>
    <Flow name='products'>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/products") and (request.verb = "GET")</Condition>
    </Flow>
    <Flow name='product'>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/products/*") and (request.verb = "GET")</Condition>
    </Flow>

    <Flow name='unknown request'>
      <Request>
        <Step><Name>RF-UnknownRequest</Name></Step>
      </Request>
      <Response/>
    </Flow>

  </Flows>

  <RouteRule name='InvokeRouteRule'>
    <TargetEndpoint>nodejs</TargetEndpoint>
  </RouteRule>

</ProxyEndpoint>
